#!/usr/bin/python

from optparse import OptionParser
from arsenal.arsenal_lib import *
from lpltk import LaunchpadService
import simplejson as json

lp          = LaunchpadService(config={'read_only':True})
d           = lp.launchpad.distributions["ubuntu"]

releases = {}
next_milestone = None

# TODO:
# * (DONE) Pretty JSON
# * (DONE) JSONify dates
# * (DONE) JSON the milestones too?
# * (DONE) Move arsenal_lib.py to lib/ dir and reference properly
# * Can I jsonify LP objects more directly?

usage = '''
%prog [OPTIONS]
'''
parser = OptionParser(usage=usage)
parser.add_option(
    '-d', '--debug',
    action='store_true', dest='DEBUG', default=False,
    help='Enable debugging output')
(options, args) = parser.parse_args()


for series in d.series:
    milestones = { }

    if series.status == "Active Development" or series.status == "Pre-release Freeze":
        for milestone in series.active_milestones:
            if milestone.date_targeted:
                milestones[milestone.name] = {
                    'date_targeted': milestone.date_targeted.ctime(),
                    'next': False
                    }
                if not next_milestone or milestone.date_targeted < next_milestone.date_targeted:
                    next_milestone = milestone
        milestones[next_milestone.name]['next'] = True

    date_released = ''
    if series.datereleased:
        date_released = series.datereleased.ctime()

    releases[series.name] = {'name':series.name,
                             'title':series.title,
                             'displayname':series.displayname,
                             'fullseriesname':series.fullseriesname,
                             'description':series.description,
                             'version':series.version,
                             'active':series.active,
                             'supported':series.supported,
                             'status':series.status,
                             'date_created':series.date_created.ctime(),
                             'date_released':date_released,
                             'milestones': milestones
                             }

print json.dumps(releases, indent=4)
